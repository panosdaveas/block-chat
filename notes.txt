deployed contract in Avalanche:
0x74BE2e0b78C5257B54E0AA5D7D1323DFbc08E9CE

gas estimation based on wallet settings, else default to a value:

async function calculateBridgeFee(source, destination, options = {}) {
    const api = new AxelarQueryAPI({ environment: Environment.TESTNET });
    const { gasLimit } = options;

    const sourceChain = CHAINS.TESTNET[source.name.toUpperCase()] || CHAINS.TESTNET.AVALANCHE;
    const destChain = CHAINS.TESTNET[destination.name.toUpperCase()] || CHAINS.TESTNET.FANTOM;

    return api.estimateGasFee(sourceChain, destChain, gasLimit || 700000, 'auto');
}

getAllMessages() keys:

content: "Hello from Avalanche!"
destinationChain: "moonbeam"
isRead: false
recipient: "0xE2a7027C0DCcF4F322e0e792765038902ce4500e"
sender: "0xE2a7027C0DCcF4F322e0e792765038902ce4500e"
sourceChain: "avalanche"
timestamp: 1745164968n